C51 COMPILER V9.60.0.0   MAIN                                                              07/07/2020 16:44:37 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "main.h"
   2          
   3          char Password[4];
   4          char CurIndex = 0;
   5          char PressNum = 0;
   6          
   7          int main()
   8          {   
   9   1          RFID_Init();
  10   1          KeyBoard_Init();
  11   1          LCD1602_Init();
  12   1          Photoelectric_Init();
  13   1          Buzzer_Init();
  14   1          FM25CL64_Init();
  15   1          DHT11_Init();
  16   1          PCF8563_Init();
*** WARNING C206 IN LINE 16 OF main.c: 'PCF8563_Init': missing function-prototype
  17   1          
  18   1          while(1){
  19   2              //按键检测部分
  20   2              if(KeyBoardCheckFlag && DoorOpenStatus == 0){
  21   3                  P24 = P25 = P26 = P27 = 1;            
  22   3                  P24 = 0;
  23   3                  delay_us(1);   //等待电平稳定
  24   3                  PressNum = IsAnyKeyPress();
  25   3                  if(PressNum)
  26   3                  {
  27   4                      if(CurIndex < 4)
  28   4                      {
  29   5                          switch(PressNum){
  30   6                              case 1:  //退格
  31   6                                  LCD1602_Write(0x80+CurIndex, 0);
  32   6                                  LCD1602_Write(0xA0, 1);       //向当前为写入空格，覆盖之前输入
  33   6                                  if(CurIndex > 0) CurIndex--;
  34   6                                  break;
  35   6                              case 2:
  36   6                                  Password[CurIndex] = 1;
  37   6                                  CurIndex++;
  38   6                                  break;
  39   6                              case 3:
  40   6                                  Password[CurIndex] = 4;
  41   6                                  CurIndex++;
  42   6                                  break;
  43   6                              case 4:
  44   6                                  Password[CurIndex] = 7;
  45   6                                  CurIndex++;
  46   6                                  break;    
  47   6                              default:
  48   6                                  break;
  49   6                          }
  50   5                          LCD1602_Write(0x80+CurIndex, 0);
  51   5                          LCD1602_Write(0x30+Password[CurIndex], 1); //向液晶写入数字
  52   5                      }
  53   4                      //有按键按下响铃0.5s
C51 COMPILER V9.60.0.0   MAIN                                                              07/07/2020 16:44:37 PAGE 2   

  54   4                      RingTheBuzzer(500);
  55   4                  }   
  56   3                  P24 = 1;
  57   3                  P25 = 0;
  58   3                  delay_us(1);
  59   3                  PressNum = IsAnyKeyPress();
  60   3                  if(PressNum)
  61   3                  {
  62   4                      if(CurIndex < 4)
  63   4                      {
  64   5                          switch(PressNum){
  65   6                              case 1:  
  66   6                                  Password[CurIndex] = 0;
  67   6                                  break;
  68   6                              case 2:
  69   6                                  Password[CurIndex] = 2;
  70   6                                  break;
  71   6                              case 3:
  72   6                                  Password[CurIndex] = 5;
  73   6                                  break;
  74   6                              case 4:
  75   6                                  Password[CurIndex] = 8;
  76   6                                  break;    
  77   6                              default:
  78   6                                  break;
  79   6                          }
  80   5                          LCD1602_Write(0x80+CurIndex, 0);
  81   5                          LCD1602_Write(0x30+Password[CurIndex], 1); //向液晶写入数字
  82   5                          CurIndex++;
  83   5                      }
  84   4                      RingTheBuzzer(500);
  85   4                  }   
  86   3                  P25 = 1;
  87   3                  P26 = 0;
  88   3                  delay_us(1); 
  89   3                  PressNum = IsAnyKeyPress();
  90   3                  if(PressNum)
  91   3                  {
  92   4                      if(CurIndex < 4)
  93   4                      {
  94   5                          switch(PressNum){
  95   6                              case 1:  //确认键
  96   6                                  PasswordCheck(Password, CurIndex); //检测密码输入是否正确
  97   6                                  CurIndex = 0;
  98   6                                  break;
  99   6                              case 2:
 100   6                                  Password[CurIndex] = 1;
 101   6                                  break;
 102   6                              case 3:
 103   6                                  Password[CurIndex] = 4;
 104   6                                  break;
 105   6                              case 4:
 106   6                                  Password[CurIndex] = 7;
 107   6                                  break;    
 108   6                              default:
 109   6                                  break;
 110   6                          }
 111   5                          if(PressNum != 1){
 112   6                              LCD1602_Write(0x80+CurIndex, 0);
 113   6                              LCD1602_Write(0x30+Password[CurIndex], 1); //向液晶写入数字
 114   6                              CurIndex++;
 115   6                          }
C51 COMPILER V9.60.0.0   MAIN                                                              07/07/2020 16:44:37 PAGE 3   

 116   5                      }
 117   4                      else if(CurIndex == 4 && PressNum == 1) //确认键按下
 118   4                      {
 119   5                          PasswordCheck(Password, CurIndex);
 120   5                          CurIndex = 0;
 121   5                      }
 122   4                      RingTheBuzzer(500);
 123   4                  }   
 124   3                  
 125   3                  // 防止检测过快导致一次按下检测多个
 126   3                  delay_ms(250);
 127   3                  delay_ms(250);
 128   3              }
 129   2              
 130   2              //检测是否该休眠
 131   2              if(abs(SleepTime - IICWriteAndReadData(PCF8563_WRITE_ADD, PCF8563_READ_ADD, 0x03)) > 10){
 132   3                  Sleep();
 133   3              }
 134   2              
 135   2              if(DoorOpenStatus){
 136   3                  if(abs(DoorOpenTime - IICWriteAndReadData(PCF8563_WRITE_ADD, PCF8563_READ_ADD, 0x03)) > 2){
 137   4                      //打开门后超过2分钟未关报警,一直报警到再次关闭为止
 138   4                      RingTheBuzzer(100);
 139   4                  }
 140   3              }
 141   2          }
 142   1      }
 143          
 144          void delay(int time){
 145   1          for(; time>0; time--){
 146   2          }
 147   1      }
 148          
 149          void delay_ms(unsigned char ms)
 150          {
 151   1           unsigned int i;
 152   1           do{
 153   2                i = MAIN_Fosc / 13000;
 154   2                while(--i)    ;   //14T per loop
 155   2           }while(--ms);
 156   1      }
 157          
 158          void delay_us(unsigned char us)
 159          {
 160   1           unsigned int i;
 161   1           do{
 162   2                i = MAIN_Fosc / 13000000;
 163   2                while(--i > 0)    ;   //14T per loop
 164   2           }while(--us);
 165   1      }
 166          
 167          char abs(char num){
 168   1          if(num >= 0) return num;
 169   1          else return -num;
 170   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    678    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.60.0.0   MAIN                                                              07/07/2020 16:44:37 PAGE 4   

   DATA SIZE        =      6    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
